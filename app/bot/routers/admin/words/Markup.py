from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from app.enums import WordType
from app.settings import settings
from app.bot.callback_data import (
    back_menu_cb,
    ChooseCentralChatForWordCb,
    DeleteAllWordsCb,
    WordMenuAddCb,
    WordMenuCb,
    WordMenuDeleteCb,
    WordShowCb,
    WordUploadingCb,
)


class Markup:
    @staticmethod
    def back_menu(word_type: WordType) -> InlineKeyboardMarkup:
        markup = InlineKeyboardBuilder()
        markup.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data=WordMenuCb(word_type=word_type).pack()))
        return markup.as_markup()

    @staticmethod
    def choose_central_chat(word_type: WordType) -> InlineKeyboardMarkup:
        markup = InlineKeyboardBuilder()

        for chat in settings.get_central_chats():
            markup.row(
                InlineKeyboardButton(
                    text=chat.title,
                    callback_data=ChooseCentralChatForWordCb(word_type=word_type, chat_id=chat.chat_id).pack(),
                )
            )

        markup.row(InlineKeyboardButton(text="¬´ –ù–∞–∑–∞–¥", callback_data=WordMenuCb(word_type=WordType.keyword).pack()))

        return markup.as_markup()

    @staticmethod
    def delete_all_words(word_type: WordType) -> InlineKeyboardMarkup:
        markup = InlineKeyboardBuilder()

        if word_type == WordType.stopword:
            text = "‚ùå –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å—Ç–æ–ø-—Å–ª–æ–≤–∞"
        elif word_type == WordType.keyword:
            text = "‚ùå –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∫–ª—é—á-—Å–ª–æ–≤–∞"

        markup.row(
            InlineKeyboardButton(
                text=text,
                callback_data=DeleteAllWordsCb(word_type=word_type).pack(),
            )
        )
        markup.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data=WordMenuCb(word_type=word_type).pack()))
        return markup.as_markup()

    @staticmethod
    def open_menu(word_type: WordType) -> InlineKeyboardMarkup:
        markup = InlineKeyboardBuilder()

        if word_type == WordType.keyword:
            markup.row(
                InlineKeyboardButton(
                    text="‚ûï –ö–ª—é—á-—Å–ª–æ–≤–∞",
                    callback_data=WordMenuAddCb(word_type=WordType.keyword).pack(),
                ),
                InlineKeyboardButton(
                    text="‚ûñ –ö–ª—é—á-—Å–ª–æ–≤–∞",
                    callback_data=WordMenuDeleteCb(word_type=WordType.keyword).pack(),
                ),
            )
            markup.row(
                InlineKeyboardButton(
                    text="üëÅÔ∏è –°–ø–∏—Å–æ–∫ –∫–ª—é—á-—Å–ª–æ–≤",
                    callback_data=WordShowCb(word_type=word_type).pack())
            )
            markup.row(
                InlineKeyboardButton(
                    text="üìó –°–ø–∏—Å–æ–∫ –∫–ª—é—á-—Å–ª–æ–≤ Excel",
                    callback_data=WordUploadingCb(word_type=WordType.keyword).pack()
                )
            )

        elif word_type == WordType.stopword:
            markup.row(
                InlineKeyboardButton(
                    text="‚ûï –°—Ç–æ–ø-—Å–ª–æ–≤–∞",
                    callback_data=WordMenuAddCb(word_type=WordType.stopword).pack(),
                ),
                InlineKeyboardButton(
                    text="‚ûñ –°—Ç–æ–ø-—Å–ª–æ–≤–∞",
                    callback_data=WordMenuDeleteCb(word_type=WordType.stopword).pack(),
                ),
            )
            markup.row(
                InlineKeyboardButton(
                    text="üëÅÔ∏è –°–ø–∏—Å–æ–∫ —Å—Ç–æ–ø-—Å–ª–æ–≤",
                    callback_data=WordShowCb(word_type=word_type).pack())
            )
            markup.row(
                InlineKeyboardButton(
                    text="üìó –°–ø–∏—Å–æ–∫ —Å—Ç–æ–ø-—Å–ª–æ–≤ Excel",
                    callback_data=WordUploadingCb(word_type=WordType.stopword).pack()
                )
            )

        markup.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data=back_menu_cb))

        return markup.as_markup()
